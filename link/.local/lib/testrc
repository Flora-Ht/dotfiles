#!/bin/sh

my_ex_test() {
    log_filename="/home/bazin_q/rendu/logs/log-`timedatectl | grep Universal | cut -d: -f 2- | awk '{print $2 "-" $3}'`"

    gistfile1.py `find . -name '*.c'` > "$log_filename"
    kakarot --no-colors > "$log_filename-kakarot"
    
    if [ "`cat $log_filename`" == "Note: 0" ]; then
        echo "OK."
        rm $log_filename
    else
        echo "ERRORS: `cat $log_filename | tail -1 | awk '{print $2}'`"
    fi
    
    if [ "`cat $log_filename-kakarot | tail -2 | awk '{print $4}'`" == "0" ]; then
        echo "OK."
        rm $log_filename-kakarot
    else
        echo "ERRORS: `cat $log_filename-kakarot | tail -2 | awk '{print $4}'`"
    fi
}

echo "Testing exercises..." `[ -n "$1" ] && my_ex_test`

test_ex() {
	if [ -z "$5" ]; then
		out=`run_test $1 $2 "$4"`
	else
		out=`run_test $1 $2 "$4" | $5`
	fi
	
	if [ "$out" == "$3" ]; then
		echo "=> Exercise $1: OK for $2."
	elif [ "$out" == "compilation failed" ]; then
		echo "=> Exercise $1: ERROR for $2."
		echo "* Compilation failed"
		exit
	else
		echo "=> Exercise $1: ERROR for $2."
		echo "* Program output:   $out"
		echo "* Waited output:    $3"
		exit
	fi
}

run_test() {
	ccflags="-Wall -Wextra -Werror -Wfatal-errors"
	
	if [ -z "$3" ]; then
		cfiles="$3"
	else
		cfiles="$2.c"
	fi

	cc ../my_putchar.c $3 tests/tests-$2.c -o test_ex$1 && \
		./test_ex$1

	if [ -e test_ex$1 ]; then
		rm test_ex$1
	else
		echo "compilation failed"
	fi
}
